{
  "__inputs": [
    {
      "name": "DS_ALARMING_API TAP",
      "label": "Alarming API tap",
      "description": "",
      "type": "datasource",
      "pluginId": "yesoreyeram-infinity-datasource",
      "pluginName": "Infinity"
    },
    {
      "name": "DS_HTTP_API",
      "label": "HTTP API",
      "description": "",
      "type": "datasource",
      "pluginId": "yesoreyeram-infinity-datasource",
      "pluginName": "Infinity"
    },
    {
      "name": "DS_POSTGRESQL_TAP",
      "label": "PostgreSQL tap",
      "description": "",
      "type": "datasource",
      "pluginId": "grafana-postgresql-datasource",
      "pluginName": "PostgreSQL"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "12.1.0-pre"
    },
    {
      "type": "datasource",
      "id": "grafana-postgresql-datasource",
      "name": "PostgreSQL",
      "version": "12.1.0-pre"
    },
    {
      "type": "panel",
      "id": "marcusolsson-dynamictext-panel",
      "name": "Business Text",
      "version": "6.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "yesoreyeram-infinity-datasource",
      "name": "Infinity",
      "version": "3.5.0"
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "yesoreyeram-infinity-datasource",
        "uid": "${DS_ALARMING_API TAP}"
      },
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 0,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 10,
      "options": {
        "afterRender": "let low = []\r\nlet medium = []\r\nlet high = []\r\nlet critical = []\r\nlet other = []\r\n\r\nlet threshold = (new Date()).getTime() - 60 * 1000\r\nif (context.data.length) {\r\n  for (let alert of context.data[0]) {\r\n    let start = new Date(alert.alarmStart)\r\n    if (start.getTime() >= threshold) {\r\n      if (alert.alarmDefinition.severity == 1) {\r\n        low.push(alert.alarmDefinition.alarmText)\r\n      }\r\n      else if (alert.alarmDefinition.severity == 2) {\r\n        medium.push(alert.alarmDefinition.alarmText)\r\n      }\r\n      else if (alert.alarmDefinition.severity == 3) {\r\n        high.push(alert.alarmDefinition.alarmText)\r\n      }\r\n      else if (alert.alarmDefinition.severity == 4) {\r\n        critical.push(alert.alarmDefinition.alarmText)\r\n      }\r\n      else {\r\n        other.push(alert.alarmDefinition.alarmText)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let alert of low) {\r\n    context.grafana.notifyError([\"Alarm (Nízka závažnosť)\", alert])\r\n  }\r\n  for (let alert of medium) {\r\n    context.grafana.notifyError([\"Alarm (Stredná závažnosť)\", alert])\r\n  }\r\n  for (let alert of high) {\r\n    context.grafana.notifyError([\"Alarm (Vysoká závažnosť)\", alert])\r\n  }\r\n  for (let alert of critical) {\r\n    context.grafana.notifyError([\"Alarm (Kritická závažnosť)\", alert])\r\n  }\r\n}",
        "content": "",
        "contentPartials": [],
        "defaultContent": "",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "default",
          "afterRender"
        ],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "data",
        "styles": "",
        "wrap": true
      },
      "pluginVersion": "6.0.0",
      "targets": [
        {
          "columns": [],
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "${DS_ALARMING_API TAP}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "parser": "backend",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "type": "json",
          "url": "https://guard331.azurewebsites.net/api/v1/data/alarm_event",
          "url_options": {
            "data": "",
            "method": "GET",
            "params": [
              {
                "key": "request",
                "value": "{}"
              },
              {
                "key": "start",
                "value": "${__from:date:iso}"
              },
              {
                "key": "end",
                "value": "${__to:date:iso}"
              }
            ]
          }
        }
      ],
      "transparent": true,
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "yesoreyeram-infinity-datasource",
        "uid": "${DS_HTTP_API}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "afterRender": "",
        "content": "<div class=\"header-container\">\n  <img class=\"logo-desktop\" src=\"https://www.daitable.com/Daitable_logo_white.svg\" alt=\"Logo for desktop\">\n  <img class=\"logo-mobile\" src=\"/public/img/Daitable_main_logo.svg\" alt=\"Logo for mobile\">\n  <h1>Placeholder</h1>\n</div>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "helpers",
          "styles"
        ],
        "externalStyles": [],
        "helpers": "const timeRange = context.grafana.timeRange;\r\nvar now = new Date();\r\nvar interval = Math.floor(now.getMinutes() / 15)\r\nvar startTime = (Math.floor(now.getTime() / 1000) -\r\n  ((now.getMinutes() - (interval * 15)) * 60) -\r\n  now.getSeconds()) * 1000\r\nvar endTime = startTime + (15 * 60 * 1000)\r\nvar timeFrom = (new Date(timeRange.from)).getTime()\r\nvar timeTo = (new Date(timeRange.to)).getTime()\r\nif (timeFrom != startTime || timeTo != endTime) {\r\n  context.grafana.locationService.partial(\r\n    { from: startTime, to: endTime, refresh: \"30s\" },\r\n    true\r\n  );\r\n  console.log(\"Time change needed.\")\r\n}\r\ncontext.grafana.locationService.partial(\r\n  { refresh: \"30s\" },\r\n  true\r\n);\r\nconsole.log(\"Time change not needed.\")",
        "renderMode": "data",
        "styles": "h1 {\n  font-size: clamp(1.8rem, 2.5vw, 2.5rem);  \n  font-family: 'Montserrat', sans-serif;\n  font-weight: bold;\n  margin: 0;\n  white-space: normal;\n  max-width: 100%;\n}\n\n.header-container {\n  display: flex;\n  flex-wrap: nowrap;          \n  align-items: center;         \n  justify-content: flex-start; \n  gap: 20px;                   \n  padding-left: 10px;\n  text-align: left;\n}\n\n.logo-desktop,\n.logo-mobile {\n  height: clamp(40px, 8vw, 80px);\n  width: auto;\n}\n\n.logo-mobile {\n  display: none;\n}\n\n@media (max-width: 576px) {\n  .logo-desktop {\n      display: none;\n  }\n  .logo-mobile {\n      display: none;   \n  }\n }\n\n@media (min-width: 577px) and (max-width: 991px) {\n  .logo-desktop {\n      display: none;\n  }\n  .logo-mobile {\n      display: block;\n      height: clamp(40px, 8vw, 80px);\n  }\n}\n\n@media (min-width: 992px) {\n  .logo-desktop {\n      display: block;\n  }\n  .logo-mobile {\n      display: none;\n  }\n}",
        "wrap": true
      },
      "pluginVersion": "6.0.0",
      "targets": [
        {
          "columns": [],
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "${DS_HTTP_API}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "parser": "backend",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "type": "json",
          "url": "",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "transparent": true,
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "taplast_metered"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "custom.barAlignment",
                "value": 1
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 90
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#2fb039",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.gradientMode",
                "value": "hue"
              },
              {
                "id": "displayName",
                "value": "Measured power node 1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "farmol_metered"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 90
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.barAlignment",
                "value": 1
              },
              {
                "id": "custom.gradientMode",
                "value": "hue"
              },
              {
                "id": "displayName",
                "value": "Measured power node 2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "power_sum"
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "farmol_predicted"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "custom.barAlignment",
                "value": 1
              },
              {
                "id": "custom.fillOpacity",
                "value": 40
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "B",
                  "mode": "normal"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.gradientMode",
                "value": "hue"
              },
              {
                "id": "displayName",
                "value": "Predicted power node 2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taplast_predicted"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "custom.barAlignment",
                "value": 1
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.fillOpacity",
                "value": 40
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "B",
                  "mode": "normal"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#2fb039",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.gradientMode",
                "value": "hue"
              },
              {
                "id": "displayName",
                "value": "Predicted power node 1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "used_capacity"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 3
              },
              {
                "id": "custom.showPoints",
                "value": "always"
              },
              {
                "id": "custom.pointSize",
                "value": 8
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Used capacity"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 14,
        "w": 16,
        "x": 0,
        "y": 3
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.1.0-pre",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL_TAP}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT * FROM predicted_15m_data",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "columns": [],
          "data": "{\n  \"MRK_Limit\": ${MRK_Limit}\n}",
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "${DS_HTTP_API}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "hide": false,
          "parser": "backend",
          "refId": "B",
          "root_selector": "",
          "source": "inline",
          "type": "json",
          "url": "",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "15-min data with prediction",
      "transformations": [
        {
          "filter": {
            "id": "byRefId",
            "options": "A"
          },
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {
              "farmol_metered": 1,
              "farmol_predicted": 3,
              "taplast_metered": 2,
              "taplast_predicted": 4,
              "timestamp": 0,
              "used_capacity": 5
            },
            "renameByName": {}
          }
        },
        {
          "filter": {
            "id": "byRefId",
            "options": "B"
          },
          "id": "calculateField",
          "options": {
            "alias": "MRK_Warn",
            "binary": {
              "left": "MRK_Limit",
              "operator": "*",
              "right": "0.9"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "filter": {
            "id": "byRefId",
            "options": "B"
          },
          "id": "calculateField",
          "options": {
            "alias": "MRK_max",
            "binary": {
              "left": "MRK_Limit",
              "operator": "*",
              "right": "1.2"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "configFromData",
          "options": {
            "configRefId": "B",
            "mappings": [
              {
                "fieldName": "MRK_Limit",
                "handlerKey": "threshold1"
              },
              {
                "fieldName": "MRK_Warn",
                "handlerArguments": {
                  "threshold": {
                    "color": "orange"
                  }
                },
                "handlerKey": "threshold1"
              },
              {
                "fieldName": "MRK_max",
                "handlerKey": "max"
              }
            ]
          }
        }
      ],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 16,
        "y": 3
      },
      "id": 6,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "12.1.0-pre",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL_TAP}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT timestamp, taplast_metered + farmol_metered AS metered FROM predicted_15m_data ORDER BY timestamp",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "columns": [],
          "data": "{\n  \"MRK_Limit\": ${MRK_Limit}\n}",
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "${DS_HTTP_API}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "hide": false,
          "parser": "backend",
          "refId": "B",
          "root_selector": "",
          "source": "inline",
          "type": "json",
          "url": "",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Active Power",
      "transformations": [
        {
          "filter": {
            "id": "byRefId",
            "options": "B"
          },
          "id": "calculateField",
          "options": {
            "alias": "MRK_Max",
            "binary": {
              "left": "MRK_Limit",
              "operator": "*",
              "right": "1.2"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          },
          "topic": "series"
        },
        {
          "id": "configFromData",
          "options": {
            "configRefId": "B",
            "mappings": [
              {
                "fieldName": "MRK_Max",
                "handlerKey": "max"
              }
            ]
          }
        }
      ],
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "yesoreyeram-infinity-datasource",
        "uid": "${DS_HTTP_API}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "mappings": [],
          "noValue": "Pre aktuálny mesiac nie je definovaná RK.",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 20,
        "y": 3
      },
      "id": 8,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.1.0-pre",
      "targets": [
        {
          "columns": [],
          "data": "${MRK_Limit}",
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "${DS_HTTP_API}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "parser": "backend",
          "refId": "A",
          "root_selector": "",
          "source": "inline",
          "type": "json",
          "url": "",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Reserved capacity",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "semi-dark-green"
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 16,
        "y": 10
      },
      "id": 7,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "12.1.0-pre",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL_TAP}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT timestamp, used_capacity AS metered FROM predicted_15m_data ORDER BY timestamp",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "columns": [],
          "data": "{\n  \"MRK_Limit\": ${MRK_Limit}\n}",
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "${DS_HTTP_API}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "hide": false,
          "parser": "backend",
          "refId": "B",
          "root_selector": "",
          "source": "inline",
          "type": "json",
          "url": "",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Predicted capacity usage",
      "transformations": [
        {
          "filter": {
            "id": "byRefId",
            "options": "B"
          },
          "id": "calculateField",
          "options": {
            "alias": "MRK_Max",
            "binary": {
              "left": "MRK_Limit",
              "operator": "*",
              "right": "1.2"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          },
          "topic": "series"
        },
        {
          "id": "configFromData",
          "options": {
            "configRefId": "B",
            "mappings": [
              {
                "fieldName": "MRK_Max",
                "handlerKey": "max"
              },
              {
                "fieldName": "MRK_Limit",
                "handlerArguments": {
                  "threshold": {
                    "color": "red"
                  }
                },
                "handlerKey": "threshold1"
              }
            ]
          }
        },
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "timestamp",
                "metered"
              ]
            }
          }
        }
      ],
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 20,
        "y": 10
      },
      "id": 9,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "12.1.0-pre",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL_TAP}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH data_to_calculate AS (\r\n  SELECT \r\n    \"timestamp\",\r\n    (taplast_metered + farmol_metered) AS metered,\r\n    'A' AS measurement\r\n  FROM \r\n    predicted_15m_data\r\n  WHERE taplast_metered IS NOT NULL AND farmol_metered IS NOT NULL\r\n),\r\ncalculated_data AS (\r\n  SELECT\r\n    COUNT(\"timestamp\") AS samples,\r\n    SUM(metered) AS metered\r\n  FROM \r\n    data_to_calculate\r\n)\r\nSELECT \r\n  ((${MRK_Limit} * 15) - metered) / (15 - samples + 0.0001) AS Power_Limit\r\nFROM calculated_data",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "columns": [],
          "data": "{\n  \"MRK_Limit\": ${MRK_Limit}\n}",
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "${DS_HTTP_API}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "hide": false,
          "parser": "backend",
          "refId": "B",
          "root_selector": "",
          "source": "inline",
          "type": "json",
          "url": "",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Power reserve",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "MRK_Max",
            "binary": {
              "left": "B MRK_Limit",
              "operator": "*",
              "right": "1.2"
            },
            "mode": "binary",
            "reduce": {
              "include": [
                "power_limit"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "configFromData",
          "options": {
            "configRefId": "B",
            "mappings": [
              {
                "fieldName": "MRK_Max",
                "handlerKey": "max"
              }
            ]
          }
        }
      ],
      "transparent": true,
      "type": "gauge"
    },
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 5,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "",
        "mode": "markdown"
      },
      "pluginVersion": "12.1.0-pre",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL_TAP}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "hourly_bucket"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "measurement"
            },
            "properties": [
              {
                "id": "custom.filterable",
                "value": true
              },
              {
                "id": "displayName",
                "value": "Device"
              },
              {
                "id": "custom.minWidth",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "last_record_diff"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Connection"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "from": 0,
                      "result": {
                        "color": "semi-dark-green",
                        "index": 0,
                        "text": "✅"
                      },
                      "to": 300
                    },
                    "type": "range"
                  },
                  {
                    "options": {
                      "from": 300,
                      "result": {
                        "color": "semi-dark-red",
                        "index": 1,
                        "text": "❌"
                      },
                      "to": 10000000
                    },
                    "type": "range"
                  }
                ]
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "custom.width",
                "value": 120
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "active_power_last"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Actual power"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "gradient",
                  "type": "gauge",
                  "valueDisplayMode": "text"
                }
              },
              {
                "id": "max",
                "value": 500000
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "active_power_avg"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mean power in 15min interval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "company"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Company"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 11,
        "x": 0,
        "y": 18
      },
      "id": 4,
      "options": {
        "cellHeight": "md",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Priemerný výkon za 15min"
          }
        ]
      },
      "pluginVersion": "12.1.0-pre",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL_TAP}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH raw_data AS (\r\n  SELECT\r\n    timestamp,\r\n    LAST_VALUE( timestamp )\r\n    OVER (\r\n      PARTITION BY measurement\r\n      ORDER BY timestamp) AS last_record,\r\n    LAST_VALUE((payload -> 'Active_Power_Total')::NUMERIC)\r\n    OVER (\r\n          PARTITION BY measurement\r\n          ORDER BY timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\r\n      ) AS Active_power_last,\r\n    measurement,\r\n    (payload -> 'Active_Power_Total')::NUMERIC AS Active_Power_Total\r\n  FROM electrometers\r\n  WHERE timestamp BETWEEN NOW() - INTERVAL '16 minutes' AND NOW()\r\n  AND FLOOR(EXTRACT(MINUTES FROM timestamp)::NUMERIC / 15.0) = FLOOR(EXTRACT(MINUTES FROM NOW())::NUMERIC / 15.0)\r\n  AND measurement IN ('TS01', 'TS02', 'TS03 - Farmol')\r\n  AND payload ? 'Active_Power_Total'\r\n),\r\naggregated_power_data AS (\r\n  SELECT\r\n  \ttime_bucket('1 hour'::INTERVAL, timestamp) AS hourly_bucket,\r\n  \tmeasurement,\r\n  \tmax(last_record) AS last_record,\r\n  \tMAX(ABS(Active_power_last)) AS Active_power_last,\r\n    AVG(ABS(Active_power_Total)) AS Active_Power_Avg\r\n  FROM raw_data\r\nGROUP BY\r\n  time_bucket('1 hour'::INTERVAL, timestamp),\r\n  measurement\r\n)\r\nSELECT \r\n  hourly_bucket,\r\n  measurement,\r\n  CASE\r\n    WHEN measurement = 'TS03 - Farmol' THEN 'Farmol'\r\n  ELSE 'Taplast'\r\n  END AS Company,\r\n  EXTRACT(EPOCH FROM (NOW() - last_record)) AS last_record_diff,\r\n  Active_power_last,\r\n  Active_power_Avg\r\n   FROM aggregated_power_data",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Monitored transformers",
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL_TAP}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "hourly_bucket"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "measurement"
            },
            "properties": [
              {
                "id": "custom.filterable",
                "value": true
              },
              {
                "id": "displayName",
                "value": "Device"
              },
              {
                "id": "custom.minWidth",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "transformer"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Transformer"
              },
              {
                "id": "custom.filterable",
                "value": true
              },
              {
                "id": "custom.minWidth",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "last_record_diff"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Connection"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "from": 0,
                      "result": {
                        "color": "semi-dark-green",
                        "index": 0,
                        "text": "✅"
                      },
                      "to": 300
                    },
                    "type": "range"
                  },
                  {
                    "options": {
                      "from": 300,
                      "result": {
                        "color": "semi-dark-red",
                        "index": 1,
                        "text": "❌"
                      },
                      "to": 10000000
                    },
                    "type": "range"
                  }
                ]
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "custom.width",
                "value": 120
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "active_power_last"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Actual power"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "gradient",
                  "type": "gauge",
                  "valueDisplayMode": "text"
                }
              },
              {
                "id": "max",
                "value": 150000
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "active_power_avg"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mean power in 15m interval"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 13,
        "x": 11,
        "y": 18
      },
      "id": 3,
      "options": {
        "cellHeight": "md",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Aktuálny výkon"
          }
        ]
      },
      "pluginVersion": "12.1.0-pre",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL_TAP}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH raw_data AS (\r\n  SELECT\r\n    timestamp,\r\n    LAST_VALUE( timestamp )\r\n    OVER (\r\n      PARTITION BY measurement\r\n      ORDER BY timestamp) AS last_record,\r\n    LAST_VALUE((payload -> 'Active_Power_Total')::NUMERIC)\r\n    OVER (\r\n          PARTITION BY measurement\r\n          ORDER BY timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\r\n      ) AS Active_power_last,\r\n    measurement,\r\n    (payload -> 'Active_Power_Total')::NUMERIC AS Active_Power_Total,\r\n    tags ->> 'Transformer' AS Transformer\r\n  FROM electrometers\r\n  WHERE timestamp BETWEEN NOW() - INTERVAL '16 minutes' AND NOW()\r\n  AND FLOOR(EXTRACT(MINUTES FROM timestamp)::NUMERIC / 15.0) = FLOOR(EXTRACT(MINUTES FROM NOW())::NUMERIC / 15.0)\r\n  AND measurement NOT IN ('TS01', 'TS02', 'TS03 - Farmol')\r\n),\r\naggregated_power_data AS (\r\n  SELECT\r\n  \ttime_bucket('1 hour'::INTERVAL, timestamp) AS hourly_bucket,\r\n  \tmeasurement,\r\n  \tmax(last_record) AS last_record,\r\n  \tMAX(ABS(Active_power_last)) AS Active_power_last,\r\n    AVG(ABS(Active_power_Total)) AS Active_Power_Avg,\r\n    Transformer\r\n  FROM raw_data\r\nGROUP BY\r\n  time_bucket('1 hour'::INTERVAL, timestamp),\r\n  measurement,\r\n  Transformer\r\n)\r\nSELECT \r\n  hourly_bucket,\r\n  measurement,\r\n  transformer,\r\n  EXTRACT(EPOCH FROM (NOW() - last_record)) AS last_record_diff,\r\n  Active_power_last,\r\n  Active_power_Avg\r\n   FROM aggregated_power_data",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Monitored devices",
      "transparent": true,
      "type": "table"
    },
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 30
      },
      "id": 11,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "",
        "mode": "markdown"
      },
      "pluginVersion": "12.1.0-pre",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL_TAP}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "align": "left",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "fieldMinMax": false,
          "mappings": [],
          "max": 1000000,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byType",
              "options": "number"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "applyToRow": false,
                  "mode": "basic",
                  "type": "color-background",
                  "wrapText": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "15min_interval\\date"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Beginning of the interval"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 21,
        "w": 24,
        "x": 0,
        "y": 31
      },
      "id": 12,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "mean"
          ],
          "show": true
        },
        "showHeader": true
      },
      "pluginVersion": "12.1.0-pre",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL_TAP}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH time_selector AS (\r\n  SELECT\r\n  \t'${selectedYear}-${selectedMonth}-01 00:00:00 Europe/Berlin'::timestamptz - INTERVAL '10 hours' AS startTime\r\n  \t\r\n),\r\nvariables AS (\r\n  SELECT\r\n  \t${selectedYear} AS startYear,\r\n  \t${selectedMonth} AS startMonth\r\n),\r\nraw_data AS (\r\nSELECT\r\n  *\r\nFROM \r\n  active_power_15min, time_selector ts\r\nWHERE \r\n  \"timestamp\" BETWEEN ts.startTime AND ts.startTime + INTERVAL '32 days'\r\n  AND measurement IN ('TS01', 'TS02')\r\n),\r\naggregated_data AS (\r\n  SELECT\r\n    \"timestamp\",\r\n    SUM(active_power_total) AS active_power_total\r\n  FROM\r\n    raw_data, variables v\r\n  WHERE\r\n    EXTRACT(MONTH FROM \"timestamp\" AT TIME ZONE 'Europe/Berlin') = v.startMonth\r\n  GROUP BY\r\n    \"timestamp\"\r\n)\r\nSELECT \r\n  TO_CHAR(\"timestamp\" AT TIME ZONE 'Europe/Berlin', 'hh24:mi') AS \"15min_interval\",\r\n  TO_CHAR(\"timestamp\" AT TIME ZONE 'Europe/Berlin', 'DD. MM.') AS \"date\",\r\n  active_power_total\r\nFROM\r\n  aggregated_data",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "15 minute averages per month - DEMO",
      "transformations": [
        {
          "id": "groupingToMatrix",
          "options": {
            "columnField": "date",
            "emptyValue": "empty",
            "rowField": "15min_interval",
            "valueField": "active_power_total"
          }
        }
      ],
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL_TAP}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "align": "left",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "fieldMinMax": false,
          "mappings": [],
          "max": 500000,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byType",
              "options": "number"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "applyToRow": false,
                  "mode": "basic",
                  "type": "color-background",
                  "wrapText": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "15min_interval\\date"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Beginning of the interval"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 21,
        "w": 24,
        "x": 0,
        "y": 52
      },
      "id": 13,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "mean"
          ],
          "show": true
        },
        "showHeader": true
      },
      "pluginVersion": "12.1.0-pre",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL_TAP}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH time_selector AS (\r\n  SELECT\r\n  \t'${selectedYear}-${selectedMonth}-01 00:00:00 Europe/Berlin'::timestamptz - INTERVAL '10 hours' AS startTime\r\n  \t\r\n),\r\nvariables AS (\r\n  SELECT\r\n  \t${selectedYear} AS startYear,\r\n  \t${selectedMonth} AS startMonth\r\n),\r\nraw_data AS (\r\nSELECT\r\n  *\r\nFROM \r\n  active_power_15min, time_selector ts\r\nWHERE \r\n  \"timestamp\" BETWEEN ts.startTime AND ts.startTime + INTERVAL '32 days'\r\n  AND measurement NOT IN ('TS01', 'TS02')\r\n),\r\naggregated_data AS (\r\n  SELECT\r\n    \"timestamp\",\r\n    SUM(active_power_total) AS active_power_total\r\n  FROM\r\n    raw_data, variables v\r\n  WHERE\r\n    EXTRACT(MONTH FROM \"timestamp\" AT TIME ZONE 'Europe/Berlin') = v.startMonth\r\n  GROUP BY\r\n    \"timestamp\"\r\n)\r\nSELECT \r\n  TO_CHAR(\"timestamp\" AT TIME ZONE 'Europe/Berlin', 'hh24:mi') AS \"15min_interval\",\r\n  TO_CHAR(\"timestamp\" AT TIME ZONE 'Europe/Berlin', 'DD. MM.') AS \"date\",\r\n  active_power_total\r\nFROM\r\n  aggregated_data",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "15 minute averages per month - DEMO",
      "transformations": [
        {
          "id": "groupingToMatrix",
          "options": {
            "columnField": "date",
            "emptyValue": "empty",
            "rowField": "15min_interval",
            "valueField": "active_power_total"
          }
        }
      ],
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL_TAP}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "align": "left",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "fieldMinMax": false,
          "mappings": [],
          "max": 1500000,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byType",
              "options": "number"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "applyToRow": false,
                  "mode": "basic",
                  "type": "color-background",
                  "wrapText": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "15min_interval\\date"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Beginning of the interval"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 21,
        "w": 24,
        "x": 0,
        "y": 73
      },
      "id": 14,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "mean"
          ],
          "show": true
        },
        "showHeader": true
      },
      "pluginVersion": "12.1.0-pre",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL_TAP}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH time_selector AS (\r\n  SELECT\r\n  \t'${selectedYear}-${selectedMonth}-01 00:00:00 Europe/Berlin'::timestamptz - INTERVAL '10 hours' AS startTime\r\n  \t\r\n),\r\nvariables AS (\r\n  SELECT\r\n  \t${selectedYear} AS startYear,\r\n  \t${selectedMonth} AS startMonth\r\n),\r\nraw_data AS (\r\nSELECT\r\n  *\r\nFROM \r\n  active_power_15min, time_selector ts\r\nWHERE \r\n  \"timestamp\" BETWEEN ts.startTime AND ts.startTime + INTERVAL '32 days'\r\n  AND measurement IN ('TS01', 'TS02', 'TS03 - Farmol')\r\n),\r\naggregated_data AS (\r\n  SELECT\r\n    \"timestamp\",\r\n    SUM(active_power_total) AS active_power_total\r\n  FROM\r\n    raw_data, variables v\r\n  WHERE\r\n    EXTRACT(MONTH FROM \"timestamp\" AT TIME ZONE 'Europe/Berlin') = v.startMonth\r\n  GROUP BY\r\n    \"timestamp\"\r\n)\r\nSELECT \r\n  TO_CHAR(\"timestamp\" AT TIME ZONE 'Europe/Berlin', 'hh24:mi') AS \"15min_interval\",\r\n  TO_CHAR(\"timestamp\" AT TIME ZONE 'Europe/Berlin', 'DD. MM.') AS \"date\",\r\n  active_power_total\r\nFROM\r\n  aggregated_data",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "15 minute averages per month - Total",
      "transformations": [
        {
          "id": "groupingToMatrix",
          "options": {
            "columnField": "date",
            "emptyValue": "empty",
            "rowField": "15min_interval",
            "valueField": "active_power_total"
          }
        }
      ],
      "transparent": true,
      "type": "table"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 41,
  "tags": [
    "Prediction",
    "Electricity"
  ],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_POSTGRESQL_TAP}"
        },
        "definition": "SELECT DISTINCT year FROM year_month ORDER BY year DESC;",
        "includeAll": false,
        "label": "Year",
        "name": "selectedYear",
        "options": [],
        "query": "SELECT DISTINCT year FROM year_month ORDER BY year DESC;",
        "refresh": 1,
        "regex": "",
        "sort": 2,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_POSTGRESQL_TAP}"
        },
        "definition": "SELECT DISTINCT \"month\" FROM year_month WHERE \"year\" = ${selectedYear}",
        "includeAll": false,
        "label": "Month",
        "name": "selectedMonth",
        "options": [],
        "query": "SELECT DISTINCT \"month\" FROM year_month WHERE \"year\" = ${selectedYear}",
        "refresh": 1,
        "regex": "",
        "sort": 2,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_POSTGRESQL_TAP}"
        },
        "definition": "SELECT\nEXTRACT(MONTH FROM NOW() AT TIME ZONE 'Europe/Berlin')",
        "hide": 2,
        "includeAll": false,
        "name": "currentMonth",
        "options": [],
        "query": "SELECT\nEXTRACT(MONTH FROM NOW() AT TIME ZONE 'Europe/Berlin')",
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_POSTGRESQL_TAP}"
        },
        "definition": "SELECT\nEXTRACT(YEAR FROM NOW() AT TIME ZONE 'Europe/Berlin')",
        "hide": 2,
        "includeAll": false,
        "name": "currentYear",
        "options": [],
        "query": "SELECT\nEXTRACT(YEAR FROM NOW() AT TIME ZONE 'Europe/Berlin')",
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "yesoreyeram-infinity-datasource",
          "uid": "${DS_ALARMING_API TAP}"
        },
        "definition": "Alarming API- (infinity) json",
        "hide": 2,
        "includeAll": false,
        "name": "MRK_Limit",
        "options": [],
        "query": {
          "infinityQuery": {
            "columns": [],
            "computed_columns": [
              {
                "selector": "",
                "text": "",
                "type": "string"
              }
            ],
            "filterExpression": "year == $currentYear AND month == $currentMonth",
            "filters": [],
            "format": "table",
            "parser": "backend",
            "refId": "variable",
            "root_selector": "",
            "source": "url",
            "transformations": [],
            "type": "json",
            "url": "https://guard331.azurewebsites.net/api/v1/data/rc_alarm_definition",
            "url_options": {
              "data": "",
              "method": "GET",
              "params": [
                {
                  "key": "request",
                  "value": "{}"
                }
              ]
            }
          },
          "query": "",
          "queryType": "infinity"
        },
        "refresh": 2,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2025-09-23T15:45:00.000Z",
    "to": "2025-09-23T16:00:00.000Z"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "15min MRK prediction",
  "uid": "baf93961-f8b0-450b-b479-a41c8cee2ee4",
  "version": 12,
  "weekStart": ""
}